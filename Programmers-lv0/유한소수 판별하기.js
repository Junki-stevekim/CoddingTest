// // 유한소수 판별하기
// // 문제 설명
// // 소수점 아래 숫자가 계속되지 않고 유한개인 소수를 유한소수라고 합니다. 분수를 소수로 고칠 때 유한소수로 나타낼 수 있는 분수인지 판별하려고 합니다. 유한소수가 되기 위한 분수의 조건은 다음과 같습니다.

// // 기약분수로 나타내었을 때, 분모의 소인수가 2와 5만 존재해야 합니다.
// // 두 정수 a와 b가 매개변수로 주어질 때, a/b가 유한소수이면 1을, 무한소수라면 2를 return하도록 solution 함수를 완성해주세요.


// 입출력 예 설명
// 입출력 예 #1

// 분수 7/20은 기약분수 입니다. 분모 20의 소인수가 2, 5 이기 때문에 유한소수입니다. 따라서 1을 return합니다.
// 입출력 예 #2

// 분수 11/22는 기약분수로 나타내면 1/2 입니다. 분모 2는 소인수가 2 뿐이기 때문에 유한소수 입니다. 따라서 1을 return합니다.
// 입출력 예 #3

// 분수 12/21는 기약분수로 나타내면 4/7 입니다. 분모 7은 소인수가 7 이므로 무한소수입니다. 따라서 2를 return합니다.
// Hint
// 분자와 분모의 최대공약수로 약분하면 기약분수를 만들 수 있습니다.
// 정수도 유한소수로 분류합니다.
// ※ 공지 - 2022년 11월 10일 테스트 케이스가 추가되었습니다. 기존에 제출한 코드가 통과하지 못할 수도 있습니다.

function solution(a, b) {
    // 1. 최대공약수 g를 구한다.
    let g = 1;
    for (let i = 1; i<= b; i++){
        if(a%i ===0 && b%i ===0) g = i;
    }
    
    // 2. 분모 b를 최대공약수 g로 나눈다.
    b = b/g    

    // 3. b를 2와 5로 나눈 나머지 값이 0이 될 때까지 반복문을 실행한다.
    // (= 2와 5를 제외한 소수가 있는지 확인)
    while (b%2 === 0) b = b/2
    while (b%5 === 0) b = b/5

    // 4. b가 1이라면 유한소수이므로(분모의 소인수가 2와 5만 존재) 1을 리턴,
    // b가 그 외의 값이라면 무한소수이므로(분모에 2와 5를 제외한 소수가 포함) 2를 리턴한다.
    return b === 1? 1 : 2;
}